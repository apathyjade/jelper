
@import './variable.scss';

@function rgbaToHex($rgbaColor,$background: rgb(255,255,255)) {
  $bgR : red($background);
  $bgG : green($background);
  $bgB : blue($background);

  $colorRed : red($rgbaColor);
  $colorGreen : green($rgbaColor);
  $colorBlue : blue($rgbaColor);
  $colorAlpha : alpha($rgbaColor);

  $rgbColor : rgb(
      (1 - $colorAlpha) * $bgR + $colorAlpha * $colorRed,
      (1 - $colorAlpha) * $bgG + $colorAlpha * $colorGreen,
      (1 - $colorAlpha) * $bgB + $colorAlpha * $colorBlue);
  @return $rgbColor;
}

.disabled {
  cursor: not-allowed;
  $color: map-get($aj_color, black);
  color: rgbaToHex(rgba($color: $color, $alpha: .2));
}

.pointer {
  &:hover {
    cursor: pointer;
    $color: map-get($aj_color, brand);
    color: $color;
  }
}

.link {
  &:hover {
    cursor: pointer;
    color: map-get($aj_color, blue);
  }
}

// 颜色
@each $key, $value in $aj_color{
  .#{"" + $key} {
    color: $value;
    &.pointer:hover,
    &.active {
      color: rgbaToHex(rgba($color: $value, $alpha: .8));
    }
  }
  .bg-#{"" + $key} {
    $color: rgbaToHex(rgba($color: $value, $alpha: .1));
    background-color: rgbaToHex($color);
  }
  .#{"" + $key}-light {
    color: rgbaToHex(rgba($color: $value, $alpha: .6));
  }
  .#{"" + $key}.disabled {
    color: rgbaToHex(rgba($color: $value, $alpha: .2));
  }
}
@each $item in $aj_gray {
  .c#{$item} {
    color: #{'#'}#{$item}#{$item}#{$item};
  }
  .bg-c#{$item} {
    background-color: #{'#'}#{$item}#{$item}#{$item};
  }
  .border-c#{$item} {
    border: 1px solid #{'#'}#{$item}#{$item}#{$item};
  }
}

.white {
  color: #fff;
}
.black {
  color: #000;
}
.bg-white {
  background: #fff;
}
.bg-black {
  background: #000;
}